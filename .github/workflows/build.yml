name: Alfresco LDTP github workflow

on:
  push:
    branches:
      - master
      - 'feature/**'
  pull_request:
    branches:
      - master

env:
  MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        env:
          JAVA_VERSION: 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Setup maven
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v settings.xml ${HOME}/.m2/ 

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "build"
        run: |
             mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
             echo "The tests are skipped as it requires different OS settings"

  pmd_scan:
    name: "PMD Scan"
    runs-on: ubuntu-latest
    needs: build
    if: >
      github.event_name == 'pull_request' &&
      !contains(github.event.head_commit.message, '[skip pmd]') &&
      !contains(github.event.head_commit.message, '[skip tests]') &&
      !contains(github.event.head_commit.message, '[force]')
    steps:
      - uses: Alfresco/ya-pmd-scan@v4.0.0
        with:
          fail-on-new-issues: "false"
          create-github-annotations: "false"
          classpath-enable: "false"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Java
        env:
          JAVA_VERSION: 11
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 11

      - name: Setup maven
        shell: bash
        run: |
          [ -d ${HOME}/.m2/ ] || mkdir -p ${HOME}/.m2/
          cp -v settings.xml ${HOME}/.m2/

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: "deploy"
        run: |
             mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
             mvn --batch-mode -U clean deploy -DskipTests